.\" Automatically generated by Pandoc 3.1.12.1
.\"
.TH "MF" "1" "" "1.0.1" "MySQL Fetcher & Formatter"
.SS NAME
mf \- MySQL Fetcher & Formatter
.SS SYNOPSIS
.IP
.EX
mf [options] [\-\-] [sql\-statement]
mf [options] [\-H|\-\-host host] [\-D|\-\-database name] [options] [\-\-] [sql\-statement]
[DB_HOST=hostname] [DB_NAME=database] mf [options] [\-\-] [sql\-statement]
.EE
.SS DESCRIPTION
Using \f[CR]ssh\f[R] to connect to the database host, execute a SQL
statement on the remote MySQL database inside a \f[CR]READ ONLY\f[R]
session, in which we also \f[CR]SET autocommit=0\f[R].
If access to critical data is not easily accessed by API or other tools
then we can use this \f[CR]mf\f[R] to quickly cover any functional gaps
in order to help us automate tasks and present data in a number of
useful formats suitble for further processing.
.PP
When no output format is selected, \f[CR]mf\f[R] will defult to
presenting data in the same tabular manner as the MySQL Monitor:
.IP
.EX
+\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-+
| column\-1 | column\-2 |
+\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-+
| value    | value    |
+\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-+
.EE
.SS Options
\f[CR]\-H\f[R], \f[CR]\-\-hostname\f[R] \f[I]host\f[R]
.PP
Use this option to specify the database host.
The default is whatever \f[CR]$DB_HOST\f[R] is set to.
.PP
\f[CR]\-D\f[R], \f[CR]\-\-database\f[R] \f[I]name\f[R]
.PP
Use this option to specify the database name.
The default is whatever \f[CR]$DB_NAME\f[R] is set to, or (failing that)
\f[CR]vz\f[R].
.PP
\f[CR]\-X\f[R], \f[CR]\-\-xml\f[R]
.PP
Use this option to render output as XML.
.PP
\f[CR]\-J\f[R], \f[CR]\-\-json\f[R]
.PP
Use this option to render output as JSON.
The result set is retrieved as XML, transformed into JSON and then
rendered using \f[CR]jq\f[R].
.PP
\f[CR]\-T\f[R], \f[CR]\-\-json\-tsv\f[R]
.PP
Use this option to render output as tab\-separated values.
The result set is retrieved as XML, transformed into JSON and the end
result is what you might expect from appending a \f[CR]\[at]tsv\f[R]
stage to the end of a \f[CR]jq\f[R] pipeline.
.PP
\f[CR]\-C\f[R], \f[CR]\-\-json\-csv\f[R]
.PP
Use this option to render output as comma\-separated values.
The result set is retrieved as XML, transformed into JSON and the end
result is what you might expect appending a \f[CR]\[at]csv\f[R] stage to
the end of a \f[CR]jq\f[R] pipeline.
.PP
\f[CR]\-t\f[R], \f[CR]\-\-table\f[R]
.PP
Use this option to produce columnar output, with all columns being
aligned.
.PP
Any \f[CR]NULL\f[R] values will be converted to \f[CR]\-\f[R], as will
any empty columns.
Binary data is rendered as unquoted \f[CR]0x...\f[R] hex sequences.
.PP
\f[CR]\-c\f[R],
\f[CR]\-\-csv [\[dq]single\[dq] | \[dq]1\[dq] | \[dq]\[aq]\[dq] | \[dq]double\[dq] | \[dq]2\[dq] | \[aq]\[dq]\[aq]]\f[R]
.PP
Use this option to produce CSV output when more control over the quoting
regime is required.
.PP
It starts with the same columnar output that the
\f[CR]\-t, \-\-table\f[R] option produces, and reduces that down to
comma\-separted values.
Any \f[CR]NULL\f[R] values will be collapsed down to sequential commas
(i.e.\ \f[CR],NULL,\f[R] becomes \f[CR],,\f[R]), and binary data is
rendered as unquoted \f[CR]0x...\f[R] hex sequences.
.PP
\f[B]Be careful\f[R], when using the default, to separate the option
from the SQL statement using \f[CR]\-\-\f[R] or you may see some strange
errors.
.PP
\f[CR]\-b\f[R],
\f[CR]\-\-brackets [\[dq]round\[dq] | \[aq]()\[aq] | \[dq]square\[dq] | \[aq][]\[aq] | \[dq]braced\[dq] | \[dq]braces\[dq] | \[aq]{}\[aq] ]\f[R]
.PP
This option is only useful when used in conjunction with
\f[CR]\-C, \-\-json\-csv\f[R] and \f[CR]\-c, \-csv\f[R] options.
.PP
Use this option when you wish to surround each row of the result set in
brackets, which can be useful if a list of tuples is required.
While the default is round brackets \f[CR]()\f[R], you may choose square
brackets or braces.
.PP
\f[B]Be careful\f[R], when using the default, to separate the option
from the SQL statement using \f[CR]\-\-\f[R] or you may see some strange
errors.
.PP
\f[CR]\-\-header\f[R], \f[CR]\-\-no\-header\f[R]
.PP
This option is only useful when presenting results using the default
output format, or in conjunction with the \f[CR]\-T, \-\-json\-tsv\f[R],
\f[CR]\-C, \-\-json\-csv\f[R], \f[CR]\-t, \-\-table\f[R] and
\f[CR]\-c, \-\-csv\f[R] options.
.PP
Use it to include (or exclude) the column headings in the output.
.PP
\f[CR]\-i\f[R], \f[CR]\-\-iso8601\f[R]
.PP
Make \f[CR]YYYY\-MM\-DD HH:MM:SS\f[R] timestamps ISO\-8601\-compliant.
.PP
This is done by inserting \f[CR]T\f[R] between the date and time
(\f[CR]YYYY\-MM\-DDTHH:MM:SS\f[R]), which can sometimes be helpful in
disambiguating date and time separators from column separators in some
output formats.
.PP
\f[CR]\-h\f[R], \f[CR]\-\-help\f[R]
.PP
Display usage notes.
.SS PREREQUISITES
This utility requires access to both \f[CR]yq\f[R] and \f[CR]jq\f[R]
tools if you intend to use the \f[CR]\-J, \-\-json\f[R],
\f[CR]\-T, \-\-json\-tsv\f[R], or \f[CR]\-C, \-\-json\-csv\f[R] options.
On macOS, these can be installed using Homebrew:
.IP
.EX
brew install yq jq
.EE
.SS EXAMPLES
.SS Example 1
.IP
.EX
mf \[dq]select id, type, enabled from product where ram_mib < 16384 and family in (\[aq]gd\-vps4\[aq]) order by type, id\[dq]

+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-+
| id                       | type | enabled |
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-+
| oh.hosting.c1.r1.d20.ct  | CT   |       1 |
| oh.hosting.c1.r2.d40.ct  | CT   |       1 |
| oh.hosting.c1.r4.d40.ct  | CT   |       1 |
| oh.hosting.c2.r4.d100.ct | CT   |       1 |
| oh.hosting.c2.r8.d100.ct | CT   |       1 |
| oh.hosting.c3.r6.d150.ct | CT   |       1 |
| oh.hosting.c4.r8.d200.ct | CT   |       1 |
| oh.hosting.c1.r1.d20     | VM   |       1 |
| oh.hosting.c1.r2.d40     | VM   |       1 |
| oh.hosting.c1.r4.d40     | VM   |       1 |
| oh.hosting.c2.r4.d100    | VM   |       1 |
| oh.hosting.c2.r8.d100    | VM   |       1 |
| oh.hosting.c3.r6.d150    | VM   |       1 |
| oh.hosting.c4.r8.d200    | VM   |       1 |
+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-+
.EE
.SS Example 2
.IP
.EX
mf \-\-table \[rs]
    \[dq]select id, type, enabled from product where ram_mib < 16384 and family in (\[aq]gd\-vps4\[aq]) order by type, id\[dq]

id                        type  enabled
oh.hosting.c1.r1.d20.ct   CT    1
oh.hosting.c1.r2.d40.ct   CT    1
oh.hosting.c1.r4.d40.ct   CT    1
oh.hosting.c2.r4.d100.ct  CT    1
oh.hosting.c2.r8.d100.ct  CT    1
oh.hosting.c3.r6.d150.ct  CT    1
oh.hosting.c4.r8.d200.ct  CT    1
oh.hosting.c1.r1.d20      VM    1
oh.hosting.c1.r2.d40      VM    1
oh.hosting.c1.r4.d40      VM    1
oh.hosting.c2.r4.d100     VM    1
oh.hosting.c2.r8.d100     VM    1
oh.hosting.c3.r6.d150     VM    1
oh.hosting.c4.r8.d200     VM    1
.EE
.SS Example 3
.IP
.EX
mf \-\-csv \-\-no\-header \[rs]
    \[dq]select id, type, enabled from product where ram_mib < 16384 and family in (\[aq]gd\-vps4\[aq]) order by type, id\[dq]

\[dq]oh.hosting.c1.r1.d20.ct\[dq],\[dq]CT\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c1.r2.d40.ct\[dq],\[dq]CT\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c1.r4.d40.ct\[dq],\[dq]CT\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c2.r4.d100.ct\[dq],\[dq]CT\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c2.r8.d100.ct\[dq],\[dq]CT\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c3.r6.d150.ct\[dq],\[dq]CT\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c4.r8.d200.ct\[dq],\[dq]CT\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c1.r1.d20\[dq],\[dq]VM\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c1.r2.d40\[dq],\[dq]VM\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c1.r4.d40\[dq],\[dq]VM\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c2.r4.d100\[dq],\[dq]VM\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c2.r8.d100\[dq],\[dq]VM\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c3.r6.d150\[dq],\[dq]VM\[dq],\[dq]1\[dq]
\[dq]oh.hosting.c4.r8.d200\[dq],\[dq]VM\[dq],\[dq]1\[dq]
.EE
.SS Example 4
.IP
.EX
mf \-\-json\-tsv \-\-no\-header \[rs]
    \[dq]select id, type, enabled from product where ram_mib < 16384 and family in (\[aq]gd\-vps4\[aq]) order by type, id\[dq]

oh.hosting.c1.r1.d20.ct CT      1
oh.hosting.c1.r2.d40.ct CT      1
oh.hosting.c1.r4.d40.ct CT      1
oh.hosting.c2.r4.d100.ct        CT      1
oh.hosting.c2.r8.d100.ct        CT      1
oh.hosting.c3.r6.d150.ct        CT      1
oh.hosting.c4.r8.d200.ct        CT      1
oh.hosting.c1.r1.d20    VM      1
oh.hosting.c1.r2.d40    VM      1
oh.hosting.c1.r4.d40    VM      1
oh.hosting.c2.r4.d100   VM      1
oh.hosting.c2.r8.d100   VM      1
oh.hosting.c3.r6.d150   VM      1
oh.hosting.c4.r8.d200   VM      1
.EE
.SS Example 5
.IP
.EX
mf \-\-json \[rs]
    \[dq]select id, type, enabled from product where ram_mib < 16384 and family in (\[aq]gd\-vps4\[aq]) order by type, id\[dq]

[
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c1.r1.d20.ct\[dq],
        \[dq]type\[dq]: \[dq]CT\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c1.r2.d40.ct\[dq],
        \[dq]type\[dq]: \[dq]CT\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c1.r4.d40.ct\[dq],
        \[dq]type\[dq]: \[dq]CT\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c2.r4.d100.ct\[dq],
        \[dq]type\[dq]: \[dq]CT\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c2.r8.d100.ct\[dq],
        \[dq]type\[dq]: \[dq]CT\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c3.r6.d150.ct\[dq],
        \[dq]type\[dq]: \[dq]CT\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c4.r8.d200.ct\[dq],
        \[dq]type\[dq]: \[dq]CT\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c1.r1.d20\[dq],
        \[dq]type\[dq]: \[dq]VM\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c1.r2.d40\[dq],
        \[dq]type\[dq]: \[dq]VM\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c1.r4.d40\[dq],
        \[dq]type\[dq]: \[dq]VM\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c2.r4.d100\[dq],
        \[dq]type\[dq]: \[dq]VM\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c2.r8.d100\[dq],
        \[dq]type\[dq]: \[dq]VM\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c3.r6.d150\[dq],
        \[dq]type\[dq]: \[dq]VM\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    },
    {
        \[dq]id\[dq]: \[dq]oh.hosting.c4.r8.d200\[dq],
        \[dq]type\[dq]: \[dq]VM\[dq],
        \[dq]enabled\[dq]: \[dq]1\[dq]
    }
]
.EE
.SH AUTHORS
Iain Campbell.
